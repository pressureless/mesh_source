arccos, atan2 from trigonometry
ElementSets from MeshConnectivity
Faces, VertexOneRing, OrientedOppositeFaces, OppositeVertices, NeighborVerticesInFace, OrientedVertices from Neighborhoods(M)
M : FaceMesh
x_i ∈ ℝ^3  
V, E, F = ElementSets( M )

VertexNormal(i) = (∑_(f ∈ Faces(i)) (x_j- x_i)×(x_k-x_i)/(‖x_j-x_i‖² ‖x_k-x_i‖²) 
where j, k = NeighborVerticesInFace(f, i) ) where i ∈ V

θ(i, f) = arccos((x_j-x_i)⋅(x_k-x_i)/(‖x_j-x_i‖ ‖x_k-x_i‖)) where i ∈ V, f ∈ F,
j, k = NeighborVerticesInFace(f, i)

area(f) = ½ ‖(x_j-x_i)×(x_k-x_i)‖ where f ∈ F,
i, j, k = OrientedVertices(f)

N(f) = ((x_j- x_i)×(x_k-x_i))/(2area(f)) where f ∈ F,
i,j,k = OrientedVertices(f)

l(i, j) = ‖x_j - x_i‖ where i,j ∈ V

ϕ(i, j) = atan2(e⋅(`n_1`×`n_2`), `n_1`⋅`n_2`) where i, j ∈ V, 
e = (x_j-x_i)/‖x_j-x_i‖,
`f_1`, `f_2` = OrientedOppositeFaces(i, j),
`n_1` = N(`f_1`),
`n_2` = N(`f_2`)

cot(k, j, i) = cos/sin where i,j,k ∈ V,
oj, oi = OrientedVertices(k, j, i),
cos = (x_oj - x_k)⋅(x_oi-x_k),
sin = ‖(x_oj - x_k)×(x_oi-x_k)‖


KN(i) = 1/2 (∑_(j ∈ VertexOneRing(i)) ϕ_ij/l_ij (x_j - x_i)) where i ∈ V


HN(i) = 1/2 (∑_(j ∈ VertexOneRing(i))(`cot(α)` + `cot(β)`) (x_i - x_j) 
where k, p = OppositeVertices(i, j),
`cot(α)` = cot(k, j, i),
`cot(β)` = cot(p, i, j) ) where i ∈ V

