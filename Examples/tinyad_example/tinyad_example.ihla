vec, inversevec, diag, svd from linearalgebra
ElementSets from MeshConnectivity
NeighborVerticesInFace, Faces, VertexOneRing, OrientedVertices from Neighborhoods(M)
M : TriangleMesh
x̄_i ∈ ℝ^3 : rest pos in 3D
x_i ∈ ℝ^2 : current pos in 2D
ε ∈ ℝ : eps


V, E, F = ElementSets(M)

S(f, x) = { 0 if |m| <= 0
    A (‖J‖² + ‖J⁻¹‖²) otherwise where f ∈ F, x_i ∈ ℝ^2,
a, b, c = OrientedVertices(f),
n = (x̄_b-x̄_a)×(x̄_c-x̄_a),
b1 = (x̄_b-x̄_a)/||x̄_b-x̄_a||,
b2 = (n × b1)/||n × b1||,
ar = (0, 0),
br = ((x̄_b-x̄_a)⋅b1, 0),
cr = ((x̄_c-x̄_a)⋅b1, (x̄_c-x̄_a)⋅b2),
m = [x_b-x_a x_c-x_a],
mr = [br-ar cr-ar],
A = ½ |mr|,
J = m mr⁻¹

psd(x) = u diag(ps)  vᵀ where x ∈ ℝ^(p×p),
u, sigma, v = svd(x),
ps_i = { sigma_i if sigma_i > 0
	 0 otherwise


Energy(x) = sum_(i ∈ F) S(i, x) where  x_i ∈ ℝ^2 

e = Energy(x) 

H = sum_(i ∈ F) psd(∂²S(i, x)/∂x²)

G = ∂e/∂x 
d = H⁻¹ (-G)

y = { vec⁻¹_x(vec(x) + 0.1 d) if √(-d⋅G) > ε
      x otherwise